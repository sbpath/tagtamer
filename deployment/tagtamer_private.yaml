AWSTemplateFormatVersion: 2010-09-09
Description: AWS Cloudformation template for TagTamer solution components - version - RC8
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label:
          default: "Amazon EC2 Configuration"
        Parameters: 
          - KeyName
          - CIDRIPRange
      - Label:
          default: "Network Configuration for EC2"
        Parameters: 
          - VPCID
          - PrivateSubnet

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: yourkeyname
  VPCID:
    Description: Name of the VPC
    Type: 'AWS::EC2::VPC::Id'
  PrivateSubnet:
    Description: >-
      Name of an existing Private Subnet to deploy ec2. Example: subnet-0a0b04653f7a82e25
    Type: 'AWS::EC2::Subnet::Id'
  CIDRIPRange:
    Description : The CIDR IP address range that can be used to access Application
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"


Resources:

  TagTamerTagGroupsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: tag_group_name
          AttributeType: S
      KeySchema:
        - AttributeName: tag_group_name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: tag_tamer_tag_groups
  TagTamerRolesTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: role_arn
          AttributeType: S
      KeySchema:
        - AttributeName: role_arn
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      TableName: tag_tamer_roles
  TagTamerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - s3.amazonaws.com
                - dynamodb.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: TagTamerRole
  TagTamerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - TagTamerRole
    DependsOn:
      - TagTamerRole
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow http/ssh traffic
      GroupName: SG-TagTamer
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CIDRIPRange
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CIDRIPRange
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CIDRIPRange
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      SecurityGroupIds:
        - !GetAtt "InstanceSecurityGroup.GroupId"
      ImageId: ami-02a35aaef5d96cafb
      KeyName: !Ref KeyName
      SubnetId: !Ref PrivateSubnet
      IamInstanceProfile: !Ref TagTamerInstanceProfile
      Tags:
        - Key: Name
          Value: Tag Tamer Web App
        - Key: Usage
          Value: Tag Tamer Solution UI
#  EC2InstanceEIP:
#    Type: 'AWS::EC2::EIP'
#    Properties:
#      Domain: vpc
#      InstanceId: !Ref EC2Instance
#    DependsOn:
#      - EC2Instance
  TagTamerPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: TagTamerPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: configtagging
            Action:
              - 'config:DescribeConfigRules'
              - 'config:PutConfigRule'
            Effect: Allow
            Resource: '*'
          - Sid: ec2tagging
            Action:
              - 'ec2:CreateTags'
              - 'ec2:DeleteTags'
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeTags'
              - 'ec2:DescribeVolumes'
            Effect: Allow
            Resource: '*'
          - Sid: iamtagging
            Action:
              - 'iam:ListRoles'
            Effect: Allow
            Resource: '*'
          - Sid: s3tagging
            Action:
              - 's3:DeleteObjectTagging'
              - 's3:GetBucketTagging'
              - 's3:ListBucket'
              - 's3:PutBucketTagging'
              - 's3:PutObjectTagging'
              - 's3:ReplicateTags'
            Effect: Allow
            Resource: '*'
          - Sid: serviceCatalog
            Action:
              - 'servicecatalog:CreateTagOption'
              - 'servicecatalog:DescribePortfolio'
              - 'servicecatalog:DescribeProduct'
              - 'servicecatalog:DescribeProductAsAdmin'
              - 'servicecatalog:ListTagOptions'
              - 'servicecatalog:SearchProducts'
              - 'servicecatalog:UpdatePortfolio'
              - 'servicecatalog:UpdateProduct'
              - 'servicecatalog:UpdateTagOption'
            Effect: Allow
            Resource: '*'
          - Sid: dynamodbRW
            Effect: Allow
            Action:
              - 'dynamodb:PutItem'
              - 'dynamodb:GetItem'
              - 'dynamodb:Scan'
              - 'dynamodb:UpdateItem'
            Resource:
              - 'arn:aws:dynamodb:*:*:table/tag_tamer_roles'
              - 'arn:aws:dynamodb:*:*:table/tag_tamer_tag_groups'
      Roles:
        - TagTamerRole
    DependsOn:
      - TagTamerRole
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  EC2InstancePrivateIP:
    Description: PrivateIP assigned to EC2Instance
    Value: !GetAtt 
      - EC2Instance
      - PrivateIp
#  PublicIP:
#    Description: Public IP address of the newly created EC2 instance
#    Value: !GetAtt 
#      - EC2Instance
#      - PublicIp

